[project]
name = "ahbicht"
description = "Description of your package"
license = { text = "MIT" }
requires-python = ">=3.9"
authors = [{ name = "Hochfrequenz Unternehmensberatungs GmbH", email = "ahbicht@hochfrequenz.de" }]
keywords = ["your", "important", "keywords"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = []     # add all the dependencies here
dynamic = ["readme", "version"]

[project.optional-dependencies]
coverage = [
    "coverage==7.6.1"
]
docs = [
    "sphinx==7.4.7",
    "sphinx-rtd-theme==2.0.0"
]
formatting = [
    "black==24.8.0",
    "isort==5.13.2"
]
json_schemas = [
    "marshmallow-jsonschema==0.13.0"
]
linting = [
    "pylint==3.2.7"
]
spellcheck = [
    "codespell==2.3.0"
]
test_packaging = [
    "build==1.2.2",
    "setuptools==75.1.0",
    "setuptools-scm==8.1.0",
    "twine==5.1.1"
]
tests = [
    "pytest==8.3.3",
    "pytest-asyncio==0.24.0",
    "pytest-datafiles==3.0.0",
    "pytest-mock==3.14.0"
]
type_check = [
    "mypy==1.11.2",
    "types-pytz==2024.2.0.20240913"
]
dev = [
    "pip-tools"
]


[project.urls]
Changelog = "https://github.com/Hochfrequenz/ahbicht/releases"
Homepage = "https://github.com/Hochfrequenz/ahbicht"


[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm[toml]>=3.4"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[tool.black]
line-length = 120

[tool.isort]
line_length = 120
profile = "black"

[tool.pylint."MESSAGES CONTROL"]
max-line-length = 120
disable = "fixme"

[tool.pytest.ini_options]
# When the mode is auto, all discovered async tests are considered asyncio-driven
# even if they have no @pytest.mark.asyncio marker.
# https://github.com/pytest-dev/pytest-asyncio#auto-mode
asyncio_mode = "auto"
markers = [
    "datafiles"
]

[tool.mypy]
# warn_unused_ignores = true # doesn't work,because either 'error: Cannot infer type argument 1 of "Tree"  [misc]' but this is also flagged as unused ignore
